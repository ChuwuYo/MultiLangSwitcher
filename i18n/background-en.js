const backgroundEn = {
  "background": "Background",
  "extension_installed": "MultiLangSwitcher extension installed/updated. Reason: {reason}",
  "domain_rules_loaded": "Domain rules loaded successfully",
  "trying_update_rules": "Trying to update request header rules to: {language}",
  "rules_updated_successfully": "Request header rules successfully updated to: {language}",
  "auto_switch_enabled": "Auto switch enabled. Subsequent requests will switch language by domain.",
  "auto_switch_disabled": "Auto switch disabled. Restored to user language: {language}",
  "language_already_set": "Language already set to {language}, skipping update",
  "rules_already_set": "Rules already set to {language}, updating cache",
  "optimized_update_rules_failed": "Optimized update rules failed",
  "rules_update_completed": "Rules update completed, status",
  "save_language_failed": "Failed to save language setting {language} to storage",
  "rules_update_failed": "Rules update failed",
  "sync_error_update_rules": "Sync error occurred while processing UPDATE_RULES",
  "auto_switch_status_updated": "Auto switch function status updated to",
  "auto_switch_enable_rules_failed": "Failed to update rules when enabling auto switch",
  "auto_switch_disable_rules_failed": "Failed to update rules when disabling auto switch",
  "received_domain_rules_request": "Received request to get domain mapping rules",
  "domain_rules_fetch_success": "Successfully fetched {count} domain mapping rules",
  "domain_rules_load_failed": "Failed to load domain rules",
  "process_get_domain_rules_error": "Error processing get_domain_rules request",
  "initializing_state": "Initializing state due to: {reason}",
  "initialization_complete": "Initialization complete.",
  "initialization_failed": "Initialization failed: {message}",
  "fallback_state_set": "Set to safe fallback state after initialization failure.",
  "fallback_state_failed": "Failed to set fallback state: {message}",
  "tab_updated": "Tab updated",
  "status": "Status",
  "finding_language_rule": "Finding language rule for domain '{hostname}'",
  "domain_rule_match_success": "Domain rule match success: '{hostname}' -> '{language}'",
  "auto_switching_hostname": "Auto-switching for hostname '{hostname}' to language '{language}'",
  "auto_switch_success": "Auto switch success: {hostname} -> {language} ({status})",
  "auto_switch_failed": "Auto switch failed: {hostname} -> {language}",
  "no_matching_rule": "Domain '{hostname}' has no matching rule, using fallback language: {fallback}",
  "fallback_language_applied": "Applied fallback language({fallback}) for {hostname}: {status}",
  "current_is_fallback": "Current language is already fallback language({fallback}), skipping update",
  "fallback_language_failed": "Failed to apply fallback language for {hostname}",
  "error_processing_url": "Error processing URL ('{url}') for auto-switch",
  "retry": "retry",
  "get_existing_rules_failed": "Failed to get existing rules",
  "update_rules_failed": "Failed to update declarativeNetRequest rules",
  "auto_switch": "auto switch",
  "rule_update_error_type": "Rule update error type",
  "message": "message",
  "retry_after": "Will retry after {delay}ms (attempt #{count})",
  "update_rules_failed_with_type": "Update rules failed ({type})",
  "max_retry_reached": "Maximum retry attempts reached or error cannot be retried, abandoning update",
  "loaded_auto_switch_status": "Loaded stored auto switch status",
  "auto_switch_enabled_default_lang": "Auto switch enabled, will apply default language ({language}) until first navigation triggers rules",
  "loaded_applied_language": "Loaded and applied stored language setting",
  "first_install_detected_lang": "First install detected browser language",
  "set_default_language": "Setting default language to",
  "ui_update": "UI update",
  "language": "language",
  "delayed_ui_update": "Delayed UI update",
  "rules_update_error": "Error occurred during rules update",
  "unexpected_rules_update_error": "Unexpected error occurred during rules update",
  "original_error": "Original error",
  "startup_load_auto_switch_status": "Startup loaded auto switch status: {status}",
  "tab_update_debug": "Tab update: {url}, auto switch={autoSwitch}",
  "auto_switch_init_failed": "Auto switch initialization failed",
  "load_language_failed": "Load language failed",
  "set_default_language_failed": "Set default language failed",
  "get_current_lang_error": "GET_CURRENT_LANG error",
  "reset_rules_failed": "Reset rules failed",
  "accept_language_reset_successful": "Accept-Language reset successful",
  "reset_error": "Reset error",
  "clearing_existing_rules": "Clearing {count} existing rules",
  "rules_cleared_successfully": "Rules cleared successfully",
  "clear_rules_failed": "Failed to clear rules",
  "auto_switch_toggle_failed": "Auto switch toggle failed",
  "startup_init_failed": "Startup initialization failed",
  
  // Update checker related keys for background logging
  "update_check_initiated": "Update check initiated for repository: {repo}",
  "update_check_api_request": "Making API request to GitHub releases endpoint",
  "update_check_success": "Update check completed successfully",
  "update_check_failed": "Update check failed: {error}",
  "update_check_network_error": "Network error during update check: {error}",
  "update_check_rate_limited": "GitHub API rate limit exceeded during update check",
  "update_check_invalid_response": "Invalid response from GitHub API: {response}",
  "update_check_version_comparison": "Version comparison: current={current}, latest={latest}, result={result}",
  "update_check_no_update_needed": "No update needed, current version is latest",
  "update_check_update_available": "Update available: {current} -> {latest}",
  "update_check_timeout": "Update check timed out after {timeout}ms",
  "update_check_parsing_error": "Error parsing version information: {error}",
  "update_check_cache_hit": "Using cached update check result",
  "update_check_cache_expired": "Update check cache expired, fetching fresh data",

  // Cache management messages
  "using_persistent_cached_update_info": "Using persistent cached update information",
  "update_check_cancelled": "Update check was cancelled",
  "update_info_cached_persistently": "Update information cached persistently",
  "failed_cache_update_info": "Failed to cache update info persistently: {error}",
  "invalid_persistent_cache_structure": "Invalid persistent cache structure, clearing",
  "persistent_cache_different_version": "Persistent cache is for different version, clearing",
  "persistent_cache_expired": "Persistent cache expired, clearing",
  "failed_load_persistent_cache": "Failed to load persistent cache: {error}",
  "persistent_cache_cleared": "Persistent cache cleared",
  "failed_clear_persistent_cache": "Failed to clear persistent cache: {error}",
  "update_checker_cache_cleared": "Update checker cache cleared",
  "expired_memory_cache_cleaned": "Expired memory cache cleaned up",
  "persistent_cache_optimization_completed": "Persistent cache optimization completed - no cleanup needed",
  "cache_optimization_failed": "Cache optimization failed: {error}",
  "cache_preload_failed": "Cache preload failed: {error}",
  "providing_graceful_fallback": "Providing graceful fallback for update check",
  "using_graceful_fallback": "Using graceful fallback due to {error}",
  "update_check_attempt": "Update check attempt {attempt}/{maxAttempts}",
  "update_check_succeeded_on_attempt": "Update check succeeded on attempt {attempt}",
  "update_check_failed_after_attempts": "Update check failed after {attempt} attempts. Error: {error}",
  "update_check_retry_delay": "Update check attempt {attempt} failed ({error}), retrying in {delay}ms...",
  "version_comparison_failed": "Version comparison failed: {error}",
  "error_details": "Error details - Type: {type}, Original: {message}, Stack: {stack}",
  "error_getting_cache_status": "Error getting persistent cache status: {error}",
  "update_check_completed": "Update check completed. Update available: {updateAvailable}",
  "update_check_failed": "Update check failed: {error}"
};